apiVersion: monitoring.kubeworkz.io/v1
kind: Dashboard
metadata:
  name: control-plane-pods
  labels:
    scope: component-monitoring
    component: control-plane-pods
    app: {{ template "kube-prometheus-stack.name" $ }}-dashboard
{{ include "kube-prometheus-stack.labels" $ | indent 4 }}
  namespace: kubeworkz-monitoring
spec:
  title: Control Plane Pods
  variables:
  - query:
      name: cluster
      label: Cluster
      request: "label_values(up, cluster)"
      datasource: prometheus
  - query:
      name: namespace
      label: Namespace
      # TODO: Using kube_namespace_labels metrics with labels to filter.
      request: "label_values(kube_namespace_created{cluster=\"$cluster\",namespace=~\"kube-system|kubeworkz-monitoring|kubeworkz-system|hnc-system|local-path-storage|ingress-nginx\"}, namespace)"
      datasource: prometheus
  - query:
      name: pod
      label: Pod
      request: "label_values(kube_pod_info{cluster=\"$cluster\", namespace=\"$namespace\"}, pod)"
      datasource: prometheus
  rows:
  - name: CPU usage (container dimension)
    panels:
    - graph:
        title: CPU usage
        datasource: Prometheus
        targets:
        - prometheus:
            query: "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{namespace=\"$namespace\", pod=\"$pod\", cluster=\"$cluster\"}) by (container) != 0"
            legend: "{{`{{`}}container{{`}}`}}"
        - prometheus:
            query: "sum(kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"cpu\"})"
            legend: requests
        - prometheus:
            query: "sum(kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"cpu\"})"
            legend: limits
    - graph:
        title: CPU current limiting value (Throttling)
        datasource: Prometheus
        targets:
        - prometheus:
            query: "sum(increase(container_cpu_cfs_throttled_periods_total{namespace=\"$namespace\", pod=\"$pod\", container!=\"\", cluster=\"$cluster\"}[5m]))by (container)
            / sum(increase(container_cpu_cfs_periods_total{cluster=\"$cluster\",namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}[5m])) by (container)"
            legend: "{{`{{`}}container{{`}}`}}"
        axes:
          left:
            unit: percentunit
            max: 1
            min: 0
    - table:
        title: CPU Quota
        datasource: Prometheus
        targets:
        - prometheus:
            query: "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container) != 0"
            instant: true
            format: table
            ref: A
        - prometheus:
            query: "sum(kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"cpu\"}) by (container)"
            instant: true
            format: table
            ref: B
        - prometheus:
            query: "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container) / sum(kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"cpu\"}) by (container)"
            instant: true
            format: table
            ref: C
        - prometheus:
            query: "sum(kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"cpu\"}) by (container)"
            instant: true
            format: table
            ref: D
        - prometheus:
            query: "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container) / sum(kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"cpu\"}) by (container)"
            instant: true
            format: table
            ref: E
        hiddenColumns: ["Time"]
        styles:
        - pattern: "container"
          alias: Container
        - pattern: "Value #A"
          alias: CPU Usage
        - pattern: "Value #B"
          alias: CPU Requests
        - pattern: "Value #C"
          alias: CPU Usage(/Requests)
          unit: percentunit
        - pattern: "Value #D"
          alias: CPU Limits
        - pattern: "Value #E"
          alias: CPU Usage(/Limits)
          unit: percentunit
  - name: Memory usage (container dimension)
    panels:
    - graph:
        title: Memory usage
        datasource: Prometheus
        span: 12
        targets:
        - prometheus:
            query: "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", image!=\"\"}) by (container)"
            legend: "{{`{{`}}container{{`}}`}}"
        - prometheus:
            query: "sum(kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"memory\"})"
            legend: requests
        - prometheus:
            query: "sum(kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"memory\"})"
            legend: limits
        axes:
          left:
            unit: bytes
    - table:
        title: Memory quota
        datasource: Prometheus
        targets:
        - prometheus:
            query: "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", image!=\"\"}) by (container)"
            instant: true
            format: table
            ref: A
        - prometheus:
            query: "sum(kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"memory\"}) by (container)"
            instant: true
            format: table
            ref: B
        - prometheus:
            query: "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", image!=\"\"}) by (container) / sum(kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"memory\"}) by (container)"
            instant: true
            format: table
            ref: C
        - prometheus:
            query: "sum(kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"memory\"}) by (container)"
            instant: true
            format: table
            ref: D
        - prometheus:
            query: "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", image!=\"\"}) by (container) / sum(kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"memory\"}) by (container)"
            instant: true
            format: table
            ref: E
        - prometheus:
            query: "sum(container_memory_rss{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container != \"\", container != \"POD\"}) by (container)"
            instant: true
            format: table
            ref: F
        - prometheus:
            query: "sum(container_memory_cache{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container != \"\", container != \"POD\"}) by (container)"
            instant: true
            format: table
            ref: G
        styles:
        - pattern: "container"
          alias: Container
        - pattern: "Value #A"
          alias: Memory usage (WSS)
          unit: bytes
        - pattern: "Value #B"
          alias: Memory Requests
          unit: bytes
        - pattern: "Value #C"
          alias: Memory usage (/Requests)
          unit: percentunit
        - pattern: "Value #D"
          alias: Memory Limits
          unit: bytes
        - pattern: "Value #E"
          alias: Memory usage (/Limits)
          unit: percentunit
        - pattern: "Value #F"
          alias: Memory usage (RSS)
          unit: bytes
        - pattern: "Value #G"
          alias: Memory usage (Cache)
          unit: bytes
  - name: Network bandwidth (Pod dimension)
    panels:
    - graph:
        title: Network Bandwidth - Inflow
        datasource: Prometheus
        targets:
        - prometheus:
            query: "sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\", pod=~\"$pod\"}[2m])) by (pod)"
            legend: "{{`{{`}}pod{{`}}`}}"
        axes:
          left:
            unit: Bps
    - graph:
        title: Network Bandwidth - Outflow
        datasource: Prometheus
        targets:
        - prometheus:
            query: "sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\", pod=~\"$pod\"}[2m])) by (pod)"
            legend: "{{`{{`}}pod{{`}}`}}"
        axes:
          left:
            unit: Bps
  - name: Network packet rate (Pod dimension)
    panels:
    - graph:
        title: Packet receiving rate
        datasource: Prometheus
        targets:
        - prometheus:
            query: "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\", pod=~\"$pod\"}[2m])) by (pod)"
            legend: "{{`{{`}}pod{{`}}`}}"
        axes:
          left:
            unit: pps
    - graph:
        title: Packet sending rate
        datasource: Prometheus
        targets:
        - prometheus:
            query: "sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\", pod=~\"$pod\"}[2m])) by (pod)"
            legend: "{{`{{`}}pod{{`}}`}}"
        axes:
          left:
            unit: pps
  - name: Network packet loss rate (Pod dimension)
    panels:
    - graph:
        title: Packet loss rate - inflow
        datasource: Prometheus
        targets:
        - prometheus:
            query: "sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\", pod=~\"$pod\"}[2m])) by (pod)"
            legend: "{{`{{`}}pod{{`}}`}}"
        axes:
          left:
            unit: pps
    - graph:
        title: Packet loss rate-outflow
        datasource: Prometheus
        targets:
        - prometheus:
            query: "sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\", pod=~\"$pod\"}[2m])) by (pod)"
            legend: "{{`{{`}}pod{{`}}`}}"
        axes:
          left:
            unit: pps
  - name: Disk read IO (container dimension)
    panels:
    - graph:
        title: IOPS (read + write)
        datasource: Prometheus
        targets:
        - prometheus:
            query: "ceil(sum by(container) (rate(container_fs_reads_total{container!=\"\", cluster=\"$cluster\",namespace=~\"$namespace\", pod=\"$pod\"}[5m]) + rate(container_fs_writes_total{container!=\"\", cluster=\"$cluster\",namespace=~\"$namespace\", pod=\"$pod\"}[5m])))"
            legend: "{{`{{`}}container}}"
    - graph:
        title: Throughput (read+write)
        datasource: Prometheus
        targets:
        - prometheus:
            query: "sum by(container) (rate(container_fs_reads_bytes_total{container!=\"\", cluster=\"$cluster\",namespace=~\"$namespace\", pod=\"$pod\"}[5m]) + rate(container_fs_writes_bytes_total{container!=\"\", cluster=\"$cluster\",namespace=~\"$namespace\", pod=\"$pod\"}[5m]))"
            legend: "{{`{{`}}container{{`}}`}}"
        axes:
          left:
            unit: Bps
  - name: Disk IO distribution
    panels:
    - table:
        title: Current disk IO value
        datasource: Prometheus
        targets:
        - prometheus:
            query: "sum by(container) (rate(container_fs_reads_total{container!=\"\", cluster=\"$cluster\",namespace=~\"$namespace\", pod=\"$pod\"}[5m]))"
            instant: true
            format: table
            ref: A
        - prometheus:
            query: "sum by(container) (rate(container_fs_writes_total{container!=\"\", cluster=\"$cluster\",namespace=~\"$namespace\", pod=\"$pod\"}[5m]))"
            instant: true
            format: table
            ref: B
        - prometheus:
            query: "sum by(container) (rate(container_fs_reads_total{container!=\"\", cluster=\"$cluster\",namespace=~\"$namespace\", pod=\"$pod\"}[5m]) + rate(container_fs_writes_total{container!=\"\", cluster=\"$cluster\",namespace=~\"$namespace\", pod=\"$pod\"}[5m]))"
            instant: true
            format: table
            ref: C
        - prometheus:
            query: "sum by(container) (rate(container_fs_reads_bytes_total{container!=\"\", cluster=\"$cluster\",namespace=~\"$namespace\", pod=\"$pod\"}[5m]))"
            instant: true
            format: table
            ref: D
        - prometheus:
            query: "sum by(container) (rate(container_fs_writes_bytes_total{container!=\"\", cluster=\"$cluster\",namespace=~\"$namespace\", pod=\"$pod\"}[5m]))"
            instant: true
            format: table
            ref: E
        - prometheus:
            query: "sum by(container) (rate(container_fs_reads_bytes_total{container!=\"\", cluster=\"$cluster\",namespace=~\"$namespace\", pod=\"$pod\"}[5m]) + rate(container_fs_writes_bytes_total{container!=\"\", cluster=\"$cluster\",namespace=~\"$namespace\", pod=\"$pod\"}[5m]))"
            instant: true
            format: table
            ref: F
        styles:
        - pattern: "container"
          alias: Container
        - pattern: "Value #A"
          alias: IOPS (read)
        - pattern: "Value #B"
          alias: IOPS (write)
        - pattern: "Value #C"
          alias: IOPS (read + write)
        - pattern: "Value #D"
          alias: Read throughput
          unit: Bps
        - pattern: "Value #E"
          alias: Write throughput
          unit: Bps
        - pattern: "Value #F"
          alias: Throughput (read+write)
          unit: Bps

